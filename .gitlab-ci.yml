.build_template: &build_template
  tags:
    - docker
    - linux_x86
  except:
    - tags  # Don't run CI for release-tags
  script:
    - python3 -m venv venv
    - source venv/bin/activate
    - pip install uv
    - uv pip install -e .[cu118] --extra-index-url https://download.pytorch.org/whl/cu118
    - bonito --version  # Minimal test that bonito has been built correctly
    - python -m unittest discover

build_bonito:
  stage: build
  image: ${CI_REGISTRY}/traque/ont-docker-base/ont-base-python:${PYTHON_VERSION}
  parallel:
    matrix:
      - PYTHON_VERSION: ["3.9", "3.10", "3.11", "3.12", "3.13"]
  <<: *build_template

sre-test:
  image: ${TRIGGER_IMAGE}
  stage: test
  when: manual
  dependencies: []
  variables:
    GIT_STRATEGY: none
  script:
    - echo ${CI_COMMIT_TITLE}
    - |
      curl -i --header "Content-Type: application/json" \
      --request POST \
      --data '{
          "key": "'${MLHUB_TRIGGER_KEY}'",
          "job_name": "Bonito SRE: '${CI_COMMIT_REF_NAME}' - '"$CI_COMMIT_TITLE"' ",
          "script_parameters": {
              "bonito_version":"'${CI_COMMIT_SHA}'",
              "sre_output":"'${SRE_OUTPUT_ROOT}'/'${CI_COMMIT_SHA}'/",
              "models":["dna_r10.4.1_e8.2_400bps_fast@v4.3.0","dna_r10.4.1_e8.2_400bps_hac@v4.3.0","dna_r10.4.1_e8.2_400bps_sup@v4.3.0"],
              "validation_set_path":"'${SRE_OUTPUT_ROOT}'/validation_sets",
              "validation_data_type":"prom"
          }
      }' \
      ${MLHUB_TRIGGER_URL}
